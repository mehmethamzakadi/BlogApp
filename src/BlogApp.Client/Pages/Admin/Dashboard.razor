@page "/admin/dashboard"
<PageTitle>Admin Dashboard</PageTitle>

<RadzenRow Class="page-header">
    <RadzenColumn Size="12">
        <h1>Yönetim Paneli</h1>
        <p>Blog içeriklerini ve topluluk etkileşimlerini tek bakışta yönetin.</p>
    </RadzenColumn>
</RadzenRow>

<RadzenRow ColumnGap="16px" RowGap="16px">
    @foreach (var metric in metrics)
    {
        <RadzenColumn Size="12" SizeMd="6" SizeLg="3">
            <RadzenCard Style="height: 100%;" Class="metric-card">
                <div class="metric-icon">
                    <RadzenIcon Icon="@metric.Icon" />
                </div>
                <div class="metric-value">@metric.Value</div>
                <div class="metric-title">@metric.Title</div>
                <span class="metric-trend @metric.TrendClass">@metric.Trend</span>
            </RadzenCard>
        </RadzenColumn>
    }
</RadzenRow>

<RadzenRow ColumnGap="16px" RowGap="16px" Style="margin-top: 1rem;">
    <RadzenColumn Size="12" SizeLg="7">
        <RadzenCard>
            <div class="card-header">
                <h3>Haftalık Trafik</h3>
                <span class="card-subtitle">Günlük ziyaretçi ve etkileşim trendleri</span>
            </div>
            <RadzenChart Style="height: 320px;" Data="traffic">
                <RadzenAreaSeries TItem="TrafficPoint" CategoryProperty="Day" ValueProperty="Visitors" Title="Ziyaretçiler" />
                <RadzenLineSeries TItem="TrafficPoint" CategoryProperty="Day" ValueProperty="Interactions" Title="Etkileşimler" Stroke="var(--rz-primary)" />
            </RadzenChart>
        </RadzenCard>
    </RadzenColumn>
    <RadzenColumn Size="12" SizeLg="5">
        <RadzenCard>
            <div class="card-header">
                <h3>Son Yorumlar</h3>
                <span class="card-subtitle">Topluluk tarafından yapılan en yeni yorumlar</span>
            </div>
            <RadzenListView Data="recentComments" TItem="AdminComment" Style="max-height: 320px; overflow-y: auto;">
                <Template Context="comment">
                    <div class="comment-item">
                        <RadzenAvatar Text="@comment.AuthorInitials" Style="margin-right: 0.75rem;" />
                        <div>
                            <strong>@comment.Author</strong>
                            <div class="comment-meta">@comment.PostTitle · @comment.CreatedAt.ToString("dd MMM")</div>
                            <p>@comment.Content</p>
                        </div>
                    </div>
                </Template>
            </RadzenListView>
        </RadzenCard>
    </RadzenColumn>
</RadzenRow>

<RadzenCard Style="margin-top: 1.5rem;">
    <div class="card-header">
        <h3>İçerik Listesi</h3>
        <span class="card-subtitle">Planlanan ve yayınlanan gönderileri yönetin</span>
    </div>
    <RadzenDataGrid Data="posts" TItem="AdminPost" AllowPaging="true" PageSize="5" ShowPagingSummary="true" Responsive="true">
        <Columns>
            <RadzenDataGridColumn TItem="AdminPost" Property="Title" Title="Başlık" />
            <RadzenDataGridColumn TItem="AdminPost" Property="Author" Title="Yazar" />
            <RadzenDataGridColumn TItem="AdminPost" Property="Status" Title="Durum" />
            <RadzenDataGridColumn TItem="AdminPost" Property="ScheduledAt" Title="Yayın Tarihi" FormatString="{0:dd.MM.yyyy}" />
            <RadzenDataGridColumn TItem="AdminPost" Title="İşlemler">
                <Template Context="post">
                    <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Small" Style="margin-right: 0.5rem;" />
                    <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Size="ButtonSize.Small" />
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</RadzenCard>

@code {
    private readonly List<DashboardMetric> metrics = new()
    {
        new DashboardMetric("Toplam Yazı", "128", "+12%", "trending_up"),
        new DashboardMetric("Aktif Yazar", "18", "+2", "group"),
        new DashboardMetric("Haftalık Ziyaret", "24.5K", "+8%", "insights"),
        new DashboardMetric("Bekleyen Onay", "5", "-1", "hourglass_top"),
    };

    private readonly List<TrafficPoint> traffic = new()
    {
        new TrafficPoint("Pzt", 3200, 860),
        new TrafficPoint("Sal", 3400, 910),
        new TrafficPoint("Çar", 3600, 950),
        new TrafficPoint("Per", 4100, 1040),
        new TrafficPoint("Cum", 4500, 1120),
        new TrafficPoint("Cmt", 5300, 1280),
        new TrafficPoint("Paz", 4900, 1190),
    };

    private readonly List<AdminComment> recentComments = new()
    {
        new AdminComment("Cem A.", "API Performansı", "Gerçekten faydalı ipuçları, teşekkürler!", DateTime.Today.AddDays(-1)),
        new AdminComment("Selin T.", "Topluluk Buluşması", "Bir sonraki etkinlik için sabırsızlanıyorum.", DateTime.Today.AddDays(-2)),
        new AdminComment("Okan R.", "Blazor ile Modern Web", "Component yapısını detaylı anlatmanız harika olmuş.", DateTime.Today.AddDays(-3)),
        new AdminComment("Esra L.", "Yol Haritamız", "Planlanan özellikler tam da ihtiyacımız olanlar.", DateTime.Today.AddDays(-5)),
    };

    private readonly List<AdminPost> posts = new()
    {
        new AdminPost("Blazor ile Modern Web", "Ayşe Yılmaz", "Yayında", DateTime.Today.AddDays(-2)),
        new AdminPost("Radzen Bileşenleri ile UI", "Mehmet Kaya", "Taslak", DateTime.Today.AddDays(2)),
        new AdminPost("Veri Görselleştirme", "Zeynep Demir", "Planlandı", DateTime.Today.AddDays(5)),
        new AdminPost("Topluluk Hikayeleri", "Caner Arslan", "Yayında", DateTime.Today.AddDays(-7)),
        new AdminPost("Performans İyileştirmeleri", "Elif Yüce", "Taslak", DateTime.Today.AddDays(1)),
        new AdminPost("Yeni Ürün Özellikleri", "Mert Öz", "Planlandı", DateTime.Today.AddDays(10))
    };

    private record DashboardMetric(string Title, string Value, string Trend, string Icon)
    {
        public string TrendClass => Trend.StartsWith("-") ? "down" : "up";
    }

    private record TrafficPoint(string Day, int Visitors, int Interactions);

    private record AdminComment(string Author, string PostTitle, string Content, DateTime CreatedAt)
    {
        public string AuthorInitials => string.Join(string.Empty, Author.Split(' ').Select(n => n[0])).ToUpperInvariant();
    }

    private record AdminPost(string Title, string Author, string Status, DateTime ScheduledAt);
}
